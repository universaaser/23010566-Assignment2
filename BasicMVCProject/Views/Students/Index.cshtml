@model BasicMVCProject.ViewModels.StudentIndexViewModel
@using PagedList.Mvc
@{
    ViewBag.Title = "Students";
}

<h2>Students</h2>
<link rel="stylesheet" href="~/Content/styles.css">
<p>
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You searched for " + Model.Search + " found") @Model.Students.TotalItemCount students
    @Html.ActionLink("Create New", "Create")
    @using (Html.BeginForm("Index", "Students", FormMethod.Get))
    {
        <label>Filter by campus:</label>
        @Html.DropDownListFor(vm => vm.Campus, Model.CampusFilterItems, "All")
        <label>Sort By:</label>
        @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")
        <input type="submit" value="Filter" />
        <input type="hidden" name="Search" id="Search" value="@Model.Search" />
    }
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Students.First().Campus.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Students.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Students.First().Address)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Students)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Campus.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }
</table>

<div>
    Page @(Model.Students.PageCount < Model.Students.PageNumber ? 0 : Model.Students.PageNumber) of @Model.Students.PageCount
    @Html.PagedListPager(Model.Students, page => Url.Action("Index", new { campus = @Model.Campus, search = @Model.Search, sortBy = @Model.SortBy, page }))
</div>
